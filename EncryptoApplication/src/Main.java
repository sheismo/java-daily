public class Main {
    public static void main(String[] args) {
        try {
            Encryptor encryptor = new Encryptor("CA4FE19D8EDCDD7859C53515599A8D4B");

            String encrypted = encryptor.encrypt("Hello, World!");
            System.out.println("Encrypted: " + encrypted);

            String decrypted = encryptor.decrypt(encrypted);
            System.out.println("Decrypted: " + decrypted);


            System.out.println("========================================================");
            String tDecrypted = encryptor.decrypt
            System.out.println("Tomisin's decrypted value:" + tDecrypted);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
}
